FROM docker.io/library/golang:1.21.12 AS builder

ENV APP_NAME=gin-gonic-hello-world

COPY src/main.go /home/go/src/
WORKDIR /home/go/src
RUN go mod init ${APP_NAME}
RUN go mod tidy

RUN go install github.com/swaggo/swag/cmd/swag@latest
RUN go get -u github.com/swaggo/gin-swagger
RUN go get -u github.com/swaggo/files
RUN swag init --parseDependency --parseInternal

RUN go install golang.org/x/vuln/cmd/govulncheck@latest
RUN govulncheck ./...

RUN GOOS=linux GOARCH=arm64 go build -o ${APP_NAME}_linux-arm64
#RUN GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o ${APP_NAME}_linux-arm64

FROM docker.io/library/debian:bookworm-slim
ENV APP_NAME=gin-gonic-hello-world
RUN apt-get update && apt-get dist-upgrade -y
RUN apt-get install -y postgresql vim wget
RUN useradd -m -d /home/noadm -s /bin/bash noadm
COPY --from=builder /home/go/src/${APP_NAME}_linux-arm64 /home/noadm

COPY pg_hba.conf /etc/postgresql/15/main/pg_hba.conf

WORKDIR /home/noadm

USER root

RUN /etc/init.d/postgresql start && psql -U postgres -h localhost -c "create database crud;"
RUN /etc/init.d/postgresql start && psql -U postgres -h localhost crud -c "create table users (name varchar(255), first_name varchar(255), registered_at date);"
RUN /etc/init.d/postgresql start && psql -U postgres -h localhost crud -c "insert into users (name, first_name, registered_at) VALUES ('lastname','firstname', '1994-10-27');"
RUN /etc/init.d/postgresql start && psql -U postgres -h localhost crud -c "insert into users (name, first_name, registered_at) VALUES ('georges','gls', '1994-12-27');"

#RUN wget https://download.red-gate.com/maven/release/com/redgate/flyway/flyway-commandline/10.1.0/flyway-commandline-10.1.0-linux-x64.tar.gz && tar xzvf flyway-commandline-10.1.0-linux-x64.tar.gz

CMD ["/bin/bash"]
